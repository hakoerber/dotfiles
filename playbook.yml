- hosts: localhost
  connection: local
  become: false
  tasks:
    - name: read machine-specific variables
      include_vars:
        file: _machines/{{ ansible_hostname }}.yml
        name: machine
      tags:
        - always

    - set_fact:
        distro: "{{ ansible_distribution|lower }}"
      tags:
        - always

    - name: install selinux specials on fedora
      dnf:
        state: installed
        name:
          - python3-libselinux
          - policycoreutils-python-utils
      become: true
      when: distro == 'fedora'

    - name: load package list
      include_vars:
        file: packages.yml

    - name: enable neovim ppa
      apt_repository:
        repo: 'ppa:neovim-ppa/stable'
        update_cache: true
      become: true
      when: distro == 'ubuntu'

    - set_fact:
        defined_packages: "{{ packages|json_query('keys(list)') }}"

    - set_fact:
        distro_packages: "{{ packages|json_query('list.*.%s'|format(distro)) }}"

    - name: check list
      assert:
        that: "defined_packages|length == distro_packages|length"

    - name: install packages
      package:
        name: "{{ packages|json_query(query) }}"
        state: installed
      become: true
      vars:
        query: "{{ 'list.*.%s[]'|format(distro) }}"

    - set_fact:
        disable_services:
          - sshd
      when: distro == 'fedora'

    - set_fact:
        disable_services:
          - ssh
      when: distro != 'fedora'

    - name: disable services
      service:
        state: stopped
        enabled: false
        name: "{{ item }}"
      with_items: "{{ disable_services }}"
      become: true

    - name: enable services
      service:
        state: started
        enabled: true
        name: "{{ item }}"
      with_items:
        - NetworkManager
        - docker
        - libvirtd
      become: true

    - name: get systemd boot target
      command: systemctl get-default
      register: systemd_target
      changed_when: false

    - set_fact:
        default_target: multi-user.target

    - name: set systemd boot target
      command: systemctl set-default {{ default_target }}
      when: systemd_target.stdout != default_target
      become: true

    - name: handle lid switch
      lineinfile:
        path: /etc/systemd/logind.conf
        regexp: '^HandleLidSwitch='
        line: 'HandleLidSwitch=ignore'
      become: true

    - name: handle power key
      lineinfile:
        path: /etc/systemd/logind.conf
        regexp: '^HandlePowerKey='
        line: 'HandlePowerKey=suspend'
      become: true

    - name: create dotfiles group
      group:
        name: dotfiles
        state: present
      become: true
      become_user: root

    - name: create dotfiles directory
      file:
        state: directory
        path: /var/lib/dotfiles
        owner: nobody
        group: dotfiles
      become: true
      become_user: root

    - set_fact:
        users: "{{ machine.users }}"
      tags:
        - always

    - include_tasks: user.yml
      args:
        apply:
          become: true
          become_user: "{{ user.name }}"
      with_items: "{{ users }}"
      loop_control:
        loop_var: user
